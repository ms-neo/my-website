{"ast":null,"code":"var _jsxFileName = \"/Users/thekiller/Documents/media/series/my-protfolio/my-app/src/components/Skills.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useRef, useEffect, useState } from 'react';\nimport { useInView } from 'react-intersection-observer';\nimport { motion, useAnimation, AnimatePresence } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst subVariants = {\n  hidden: {\n    opacity: 0\n  },\n  visible: {\n    opacity: 1,\n    transition: {\n      staggerChildren: .1,\n      type: 'spring',\n      ease: \"easeInOut\"\n    }\n  },\n  exit: {\n    opacity: 0,\n    height: \"50vh\"\n  }\n};\nconst cardVariants = {\n  hidden: {\n    y: 400,\n    opacity: 0\n  },\n  visible: {\n    y: 0,\n    opacity: 1,\n    transition: {\n      duration: .7\n    }\n  },\n  exit: {\n    opacity: 0,\n    y: -400\n  }\n};\nconst iconsVariants = {\n  hidden: {\n    scale: 0\n  },\n  visible: {\n    scale: 1,\n    transition: {\n      duration: .7,\n      type: 'spring',\n      stiffness: 250\n    }\n  }\n};\nconst childrenVariants = {\n  hidden: {\n    y: 500\n  },\n  visible: {\n    y: 0,\n    transition: {\n      duration: .7\n    }\n  }\n};\n\nconst Skills = _ref => {\n  _s();\n\n  let {\n    skillsData\n  } = _ref;\n  const [variant, setVariant] = useState();\n  const animation = useAnimation();\n  const [ref, inView, entry] = useInView({\n    threshold: .1\n  });\n  useEffect(() => {\n    inView ? animation.start('visible') : animation.start('hidden');\n  }, [animation, inView]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container skill\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"I am good at :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"sub-container\",\n          variants: subVariants,\n          initial: \"hidden\",\n          animate: animation,\n          exit: \"hidden\",\n          ref: ref,\n          children: skillsData.map((item, index) => item && /*#__PURE__*/_jsxDEV(motion.div, {\n            className: \"card\",\n            variants: cardVariants,\n            exit: \"exit\",\n            animate: animation,\n            ref: ref,\n            children: [/*#__PURE__*/_jsxDEV(motion.img, {\n              src: item.img,\n              alt: \"screen-icon\",\n              variants: iconsVariants\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(motion.div, {\n                className: \"line\",\n                variants: childrenVariants\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(motion.h3, {\n                variants: childrenVariants,\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 5\n              }, this), Array.isArray(item.skills) ? /*#__PURE__*/_jsxDEV(Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(motion.ul, {\n                  variants: childrenVariants,\n                  children: item.skills.map((skillItem, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: skillItem\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 5\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 5\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(motion.p, {\n                variants: childrenVariants,\n                children: item.skills\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 5\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 5\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 6\n  }, this);\n};\n\n_s(Skills, \"CFqTxbf2gF6eAK8sc2xmJOK8NsA=\", false, function () {\n  return [useAnimation, useInView];\n});\n\n_c = Skills;\nexport default Skills;\n\nvar _c;\n\n$RefreshReg$(_c, \"Skills\");","map":{"version":3,"sources":["/Users/thekiller/Documents/media/series/my-protfolio/my-app/src/components/Skills.js"],"names":["React","Fragment","useRef","useEffect","useState","useInView","motion","useAnimation","AnimatePresence","subVariants","hidden","opacity","visible","transition","staggerChildren","type","ease","exit","height","cardVariants","y","duration","iconsVariants","scale","stiffness","childrenVariants","Skills","skillsData","variant","setVariant","animation","ref","inView","entry","threshold","start","map","item","index","img","title","Array","isArray","skills","skillItem"],"mappings":"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","sourcesContent":["\nimport React, { Fragment ,useRef ,useEffect, useState} from 'react';\nimport {useInView} from 'react-intersection-observer'\nimport {motion, useAnimation ,AnimatePresence} from 'framer-motion'\n\n\nconst subVariants ={\n    hidden:{\n      opacity:0,\n    },\n    visible:{\n      opacity:1,\n     transition:{\n      staggerChildren:.1,\n      type:'spring',\n      ease:\"easeInOut\"\n     }\n    },\n    exit:{\n      opacity:0,\n      height:\"50vh\"\n    }\n}\n\nconst cardVariants ={\n    hidden:{\n      y:400,\n      opacity:0\n    },\n    visible:{\n        y:0,\n      opacity:1,\n     transition:{\n        duration:.7 ,\n     }\n    },\n    exit:{\n      opacity:0,\n    y:-400\n    }\n}\n\nconst iconsVariants ={\n    hidden:{\n        scale:0,\n      },\n      visible:{\n          scale:1,\n       transition:{\n          duration:.7 ,\n          type: 'spring',\n          stiffness:250,\n       \n       }\n      }\n}\n\nconst childrenVariants ={\n    hidden:{\n        y:500,\n      },\n      visible:{\n          y:0,\n       transition:{\n          duration:.7 , \n       }\n      }\n}\n\nconst Skills =({skillsData})=>{\n  const [variant , setVariant] =useState()\n\n    const animation = useAnimation();\n    const [ref,inView,entry]=useInView({threshold:.1});\n\n    useEffect(()=>{\n inView? animation.start('visible')\n:animation.start('hidden');\n    },[animation,inView])\n\n    return (\n     <Fragment>\n  <div className=\"container skill\"  >\n  <h2 className=\"title\">I am good at :</h2>\n  <AnimatePresence>\n  <motion.div \n   className=\"sub-container\"\n   variants={subVariants} \n   initial='hidden'\n   animate={animation}\n   exit=\"hidden\"\n   ref={ref} >\n    {skillsData.map((item,index) => item &&\n    <motion.div \n     className=\"card\"\n     key={index}\n     variants={cardVariants}\n     exit=\"exit\"\n     animate={animation}\n     ref={ref} >\n    <motion.img \n    src={item.img} \n    alt=\"screen-icon\"\n    variants={iconsVariants}/>\n    <div>\n    <motion.div className=\"line\" variants={childrenVariants}></motion.div>\n    <motion.h3 variants={childrenVariants}>{item.title}</motion.h3>\n    {  Array.isArray(item.skills) ? <Fragment>\n    <motion.ul variants={childrenVariants}>\n    {item.skills.map((skillItem,index) => \n    <li key={index}>{skillItem}</li> )} \n    </motion.ul> </Fragment>  : <motion.p variants={childrenVariants}>{item.skills}</motion.p> }\n    </div>\n    </motion.div>\n    )}\n    </motion.div>\n    </AnimatePresence>\n    </div>\n    </Fragment>\n    )\n}\n\nexport default Skills"]},"metadata":{},"sourceType":"module"}